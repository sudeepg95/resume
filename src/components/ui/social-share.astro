---
import { Icon } from 'astro-icon/components';

interface Props {
  title: string;
  url: string;
  description?: string;
}

const { title, url, description = '' } = Astro.props;

const shareData = {
  title: title,
  url: url,
  text: description,
};
---

<div
  class="fixed top-16 right-4 no-print md:top-14 md:right-2"
  data-social-share
  style="z-index: var(--z-dropdown);"
>
  <button
    class="w-12 h-12 border-0 rounded-full bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 shadow-lg cursor-pointer transition-all duration-200 flex items-center justify-center hover:scale-105 hover:shadow-xl md:w-10 md:h-10"
    id="share-toggle"
    aria-label="Share CV"
  >
    <Icon name="fa-solid:share-alt" class="w-5 h-5" />
  </button>

  <div
    class="absolute top-full mt-2 right-0 min-w-40 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-xl opacity-0 invisible -translate-y-2.5 transition-all duration-200 p-2 md:min-w-36"
    id="share-dropdown"
  >
    <div class="flex flex-col gap-1">
      <button
        class="flex items-center gap-3 p-3 border-0 rounded text-gray-900 dark:text-gray-100 no-underline cursor-pointer transition-all duration-150 font-primary text-sm hover:bg-gray-50 dark:hover:bg-gray-700/50"
        data-platform="native"
      >
        <Icon name="fa-solid:share-alt" class="w-5 h-5" />
        <span>Share</span>
      </button>

      <a
        class="flex items-center gap-3 p-3 border-0 rounded bg-transparent text-gray-900 dark:text-gray-100 no-underline cursor-pointer transition-all duration-150 font-primary text-sm hover:bg-gray-50 dark:hover:bg-gray-700/50"
        data-platform="linkedin"
        target="_blank"
        rel="noopener noreferrer"
      >
        <Icon name="fa-brands:linkedin" class="w-5 h-5" />
        <span>LinkedIn</span>
      </a>

      <a
        class="flex items-center gap-3 p-3 border-0 rounded bg-transparent text-gray-900 dark:text-gray-100 no-underline cursor-pointer transition-all duration-150 font-primary text-sm hover:bg-gray-50 dark:hover:bg-gray-700/50"
        data-platform="twitter"
        target="_blank"
        rel="noopener noreferrer"
      >
        <Icon name="fa-brands:twitter" class="w-5 h-5" />
        <span>Twitter</span>
      </a>

      <button
        class="flex items-center gap-3 p-3 border-0 rounded bg-transparent text-gray-900 dark:text-gray-100 no-underline cursor-pointer transition-all duration-150 font-primary text-sm hover:bg-gray-50 dark:hover:bg-gray-700/50"
        data-platform="copy"
      >
        <Icon name="fa-solid:copy" class="w-5 h-5" />
        <span>Copy Link</span>
      </button>
    </div>
  </div>
</div>

<script define:vars={{ shareData }}>
  class SocialShare {
    constructor() {
      this.shareData = shareData;
      this.init();
    }

    init() {
      const toggle = document.getElementById('share-toggle');
      const dropdown = document.getElementById('share-dropdown');

      if (!toggle || !dropdown) return;

      toggle.addEventListener('click', (e) => {
        e.stopPropagation();
        if (dropdown.classList.contains('opacity-0')) {
          dropdown.classList.remove(
            'opacity-0',
            'invisible',
            '-translate-y-2.5'
          );
          dropdown.classList.add('opacity-100', 'visible', 'translate-y-0');
        } else {
          dropdown.classList.add('opacity-0', 'invisible', '-translate-y-2.5');
          dropdown.classList.remove('opacity-100', 'visible', 'translate-y-0');
        }
      });

      document.addEventListener('click', (e) => {
        if (!e.target.closest('[data-social-share]')) {
          dropdown.classList.add('opacity-0', 'invisible', '-translate-y-2.5');
          dropdown.classList.remove('opacity-100', 'visible', 'translate-y-0');
        }
      });

      this.setupShareOptions();
    }

    setupShareOptions() {
      document.querySelectorAll('[data-platform]').forEach((option) => {
        option.addEventListener('click', (e) => {
          e.preventDefault();
          const platform = option.dataset.platform;
          this.share(platform);
        });
      });
    }

    async share(platform) {
      const { title, url, text } = this.shareData;

      switch (platform) {
        case 'native':
          if (navigator.share) {
            try {
              await navigator.share({ title, url, text });
            } catch (error) {
              console.log('Share cancelled');
            }
          } else {
            this.fallbackShare();
          }
          break;

        case 'linkedin':
          const linkedinUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`;
          window.open(linkedinUrl, '_blank', 'width=600,height=400');
          break;

        case 'twitter':
          const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`;
          window.open(twitterUrl, '_blank', 'width=600,height=400');
          break;

        case 'copy':
          try {
            await navigator.clipboard.writeText(url);
            this.showNotification('Link copied to clipboard!');
          } catch (error) {
            this.fallbackCopy(url);
          }
          break;
      }

      document.getElementById('share-dropdown').classList.remove('open');
    }

    fallbackShare() {
      this.share('copy');
    }

    fallbackCopy(text) {
      const textArea = document.createElement('textarea');
      textArea.value = text;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      this.showNotification('Link copied to clipboard!');
    }

    showNotification(message) {
      const notification = document.createElement('div');
      notification.className = 'share-notification';
      notification.textContent = message;
      notification.style.cssText = `
        position: fixed;
        top: 1rem;
        left: 50%;
        transform: translateX(-50%);
        background: var(--color-success);
        color: var(--color-white);
        padding: 0.75rem 1.5rem;
        border-radius: var(--border-radius);
        z-index: 9999;
        font-weight: 500;
      `;

      document.body.appendChild(notification);

      setTimeout(() => {
        notification.remove();
      }, 3000);
    }
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => new SocialShare());
  } else {
    new SocialShare();
  }
</script>
