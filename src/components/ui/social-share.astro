---
interface Props {
  title: string;
  url: string;
  description?: string;
}

const { title, url, description = '' } = Astro.props;

const shareData = {
  title: title,
  url: url,
  text: description,
};
---

<div class="fixed top-16 right-4 no-print md:top-14 md:right-2" data-social-share style="z-index: var(--z-dropdown);">
  <button class="w-12 h-12 border-0 rounded-full bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 shadow-lg cursor-pointer transition-all duration-200 flex items-center justify-center hover:scale-105 hover:shadow-xl md:w-10 md:h-10" id="share-toggle" aria-label="Share CV">
    <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
      <path
        d="M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z"
      ></path>
    </svg>
  </button>

  <div class="absolute top-full mt-2 right-0 min-w-40 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-xl opacity-0 invisible -translate-y-2.5 transition-all duration-200 p-2 md:min-w-36" id="share-dropdown">
    <div class="flex flex-col gap-1">
      <button class="flex items-center gap-3 p-3 border-0 rounded text-gray-900 dark:text-gray-100 no-underline cursor-pointer transition-all duration-150 font-primary text-sm hover:bg-gray-50 dark:hover:bg-gray-700/50" data-platform="native">
        <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
          <path
            d="M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z"
          ></path>
        </svg>
        <span>Share</span>
      </button>

      <a
        class="flex items-center gap-3 p-3 border-0 rounded bg-transparent text-gray-900 dark:text-gray-100 no-underline cursor-pointer transition-all duration-150 font-primary text-sm hover:bg-gray-50 dark:hover:bg-gray-700/50"
        data-platform="linkedin"
        target="_blank"
        rel="noopener noreferrer"
      >
        <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
          <path
            d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
          ></path>
        </svg>
        <span>LinkedIn</span>
      </a>

      <a
        class="flex items-center gap-3 p-3 border-0 rounded bg-transparent text-gray-900 dark:text-gray-100 no-underline cursor-pointer transition-all duration-150 font-primary text-sm hover:bg-gray-50 dark:hover:bg-gray-700/50"
        data-platform="twitter"
        target="_blank"
        rel="noopener noreferrer"
      >
        <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
          <path
            d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"
          ></path>
        </svg>
        <span>Twitter</span>
      </a>

      <button class="flex items-center gap-3 p-3 border-0 rounded bg-transparent text-gray-900 dark:text-gray-100 no-underline cursor-pointer transition-all duration-150 font-primary text-sm hover:bg-gray-50 dark:hover:bg-gray-700/50" data-platform="copy">
        <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
          <path
            d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"
          ></path>
        </svg>
        <span>Copy Link</span>
      </button>
    </div>
  </div>
</div>

<script define:vars={{ shareData }}>
  class SocialShare {
    constructor() {
      this.shareData = shareData;
      this.init();
    }

    init() {
      const toggle = document.getElementById('share-toggle');
      const dropdown = document.getElementById('share-dropdown');

      if (!toggle || !dropdown) return;

      toggle.addEventListener('click', (e) => {
        e.stopPropagation();
        if (dropdown.classList.contains('opacity-0')) {
          dropdown.classList.remove('opacity-0', 'invisible', '-translate-y-2.5');
          dropdown.classList.add('opacity-100', 'visible', 'translate-y-0');
        } else {
          dropdown.classList.add('opacity-0', 'invisible', '-translate-y-2.5');
          dropdown.classList.remove('opacity-100', 'visible', 'translate-y-0');
        }
      });

      document.addEventListener('click', (e) => {
        if (!e.target.closest('[data-social-share]')) {
          dropdown.classList.add('opacity-0', 'invisible', '-translate-y-2.5');
          dropdown.classList.remove('opacity-100', 'visible', 'translate-y-0');
        }
      });

      this.setupShareOptions();
    }

    setupShareOptions() {
      document.querySelectorAll('[data-platform]').forEach((option) => {
        option.addEventListener('click', (e) => {
          e.preventDefault();
          const platform = option.dataset.platform;
          this.share(platform);
        });
      });
    }

    async share(platform) {
      const { title, url, text } = this.shareData;

      switch (platform) {
        case 'native':
          if (navigator.share) {
            try {
              await navigator.share({ title, url, text });
            } catch (error) {
              console.log('Share cancelled');
            }
          } else {
            this.fallbackShare();
          }
          break;

        case 'linkedin':
          const linkedinUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`;
          window.open(linkedinUrl, '_blank', 'width=600,height=400');
          break;

        case 'twitter':
          const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`;
          window.open(twitterUrl, '_blank', 'width=600,height=400');
          break;

        case 'copy':
          try {
            await navigator.clipboard.writeText(url);
            this.showNotification('Link copied to clipboard!');
          } catch (error) {
            this.fallbackCopy(url);
          }
          break;
      }

      document.getElementById('share-dropdown').classList.remove('open');
    }

    fallbackShare() {
      this.share('copy');
    }

    fallbackCopy(text) {
      const textArea = document.createElement('textarea');
      textArea.value = text;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      this.showNotification('Link copied to clipboard!');
    }

    showNotification(message) {
      const notification = document.createElement('div');
      notification.className = 'share-notification';
      notification.textContent = message;
      notification.style.cssText = `
        position: fixed;
        top: 1rem;
        left: 50%;
        transform: translateX(-50%);
        background: var(--color-success);
        color: var(--color-white);
        padding: 0.75rem 1.5rem;
        border-radius: var(--border-radius);
        z-index: 9999;
        font-weight: 500;
      `;

      document.body.appendChild(notification);

      setTimeout(() => {
        notification.remove();
      }, 3000);
    }
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => new SocialShare());
  } else {
    new SocialShare();
  }
</script>
