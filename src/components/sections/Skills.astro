---
import type { Skill } from '../../utils/schemas/cv-schema';

interface Props {
  skills: Skill[];
}

const { skills } = Astro.props;
---

<section class="skills-section">
  <h2 class="section-title">
    <svg class="section-icon" viewBox="0 0 24 24" fill="currentColor">
      <path
        d="M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z"
      ></path>
    </svg>
    Skills & Technologies
  </h2>

{
  skills.length > 0 && (
    <div class="skills-grid">
      {skills.map((skill) => (
        <div class="skill-category">
          <h3 class="category-title">
            <svg class="category-icon" viewBox="0 0 24 24" fill="currentColor">
              <path
                d="M8,3A2,2 0 0,0 6,5V9A2,2 0 0,1 4,11H3V13H4A2,2 0 0,1 6,15V19A2,2 0 0,0 8,21H10V19H8V14A2,2 0 0,0 6,12A2,2 0 0,0 8,10V5H10V3H8M16,3A2,2 0 0,1 18,5V9A2,2 0 0,0 20,11H21V13H20A2,2 0 0,0 18,15V19A2,2 0 0,1 16,21H14V19H16V14A2,2 0 0,1 18,12A2,2 0 0,1 16,10V5H14V3H16Z"
              ></path>
            </svg>
            {skill.name}
            {skill.level && <span class="skill-level">{skill.level}</span>}
          </h3>
          <div class="keywords-container">
            {skill.keywords.map((keyword) => (
              <span class="skill-tag">{keyword}</span>
            ))}
          </div>
        </div>
      ))}
    </div>
  )
}
</section>

<style>
  .skills-section {
    margin: 2rem 0;
  }

  .section-title {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--color-primary);
    margin-bottom: 2rem;
    padding-bottom: 0.75rem;
    border-bottom: 2px solid var(--color-primary);
  }

  :global([data-mode='dark']) .section-title {
    color: var(--color-accent) !important;
    border-bottom-color: var(--color-accent) !important;
  }

  .section-icon {
    width: 1.5rem;
    height: 1.5rem;
    color: inherit;
  }

  .skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 1.5rem;
  }

  .skill-category {
    padding: 1.5rem;
    background: var(--color-background);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius-md);
    transition: all var(--transition-normal);
  }

  .skill-category:hover {
    box-shadow: var(--shadow-md);
    border-color: var(--color-primary);
    transform: translateY(-2px);
  }

  .category-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--color-text);
    margin: 0 0 1rem 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .category-icon {
    width: 1.25rem;
    height: 1.25rem;
    color: var(--color-primary);
  }

  :global([data-mode='dark']) .category-icon {
    color: var(--color-accent) !important;
  }

  .skill-level {
    font-size: 0.75rem;
    background: var(--color-primary);
    color: var(--color-white);
    padding: 0.25rem 0.5rem;
    border-radius: var(--border-radius-full);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  .keywords-container {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .skill-tag {
    background: var(--color-background-secondary);
    color: var(--color-text);
    padding: 0.375rem 0.75rem;
    border-radius: var(--border-radius-full);
    font-size: 0.875rem;
    font-weight: 500;
    border: 1px solid var(--color-border);
    transition: all var(--transition-fast);
    cursor: default;
  }

  .skill-tag:hover {
    background: var(--color-primary);
    color: var(--color-white);
    border-color: var(--color-primary);
    transform: translateY(-1px);
  }

  @media (max-width: 768px) {
    .skills-grid {
      grid-template-columns: 1fr;
    }

    .skill-category:hover {
      transform: none;
    }

    .category-title {
      font-size: 1rem;
    }
  }

  @media print {
    .skill-category {
      break-inside: avoid;
      border: 1px solid var(--color-border);
      box-shadow: none;
      margin-bottom: 1rem;
    }

    .skill-category:hover {
      box-shadow: none;
      border-color: var(--color-border);
      transform: none;
    }

    .skill-tag:hover {
      background: var(--color-background-secondary);
      color: var(--color-text);
      border-color: var(--color-border);
      transform: none;
    }
  }
</style>
