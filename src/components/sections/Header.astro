---
// src/components/sections/Header.astro
import type { Basics } from '../../utils/schemas/cv-schema';
import { getNetworkIcon, sanitizeUrl } from '../../utils/helpers/data-helpers';

interface Props {
  basics: Basics;
}

const { basics } = Astro.props;
const {
  name,
  label,
  image,
  bg_image,
  email,
  phone,
  url,
  location,
  profiles,
  actions,
} = basics;

// Process profiles to handle different URL formats
const processedProfiles =
  profiles
    ?.map((profile) => ({
      ...profile,
      url:
        profile.network === 'Email'
          ? `mailto:${profile.url}`
          : profile.network === 'Phone'
            ? `tel:${profile.url}`
            : sanitizeUrl(profile.url),
      icon: getNetworkIcon(profile.network),
    }))
    .filter((profile) => profile.url) || [];
---

<header
  class="resume-header"
  style={bg_image ? `background-image: url(${bg_image})` : ''}
>
  {bg_image && <div class="header-overlay" />}

  <div class="header-content">
    <div class="header-main">
      {
        image && (
          <div class="profile-image-container">
            <img
              src={image}
              alt={`${name} profile photo`}
              class="profile-image"
              loading="eager"
            />
          </div>
        )
      }

      <div class="header-text">
        <h1 class="name">{name}</h1>
        <h2 class="title">{label}</h2>

        {
          url && (
            <a
              href={sanitizeUrl(url)}
              class="website-link"
              target="_blank"
              rel="noopener noreferrer"
            >
              <span class="sr-only">Visit website</span>
              <svg class="icon" viewBox="0 0 24 24" fill="currentColor">
                <path d="M10.59 13.41c.41.39.41 1.03 0 1.42-.39.39-1.03.39-1.42 0a5.003 5.003 0 0 1 0-7.07l3.54-3.54a5.003 5.003 0 0 1 7.07 0 5.003 5.003 0 0 1 0 7.07l-1.49 1.49c.01-.82-.12-1.64-.4-2.42l.47-.48a2.982 2.982 0 0 0 0-4.24 2.982 2.982 0 0 0-4.24 0l-3.53 3.53a2.982 2.982 0 0 0 0 4.24zm2.82-4.24c.39-.39 1.03-.39 1.42 0a5.003 5.003 0 0 1 0 7.07l-3.54 3.54a5.003 5.003 0 0 1-7.07 0 5.003 5.003 0 0 1 0-7.07l1.49-1.49c-.01.82.12 1.64.4 2.42l-.47.48a2.982 2.982 0 0 0 0 4.24 2.982 2.982 0 0 0 4.24 0l3.53-3.53a2.982 2.982 0 0 0 0-4.24.996.996 0 0 1 0-1.42z" />
              </svg>
            </a>
          )
        }
      </div>
    </div>

    <div class="contact-info">
      <div class="contact-item">
        <svg class="icon" viewBox="0 0 24 24" fill="currentColor">
          <path
            d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"
          ></path>
        </svg>
        <a href={`mailto:${email}`} class="contact-link">{email}</a>
      </div>

      {
        phone && (
          <div class="contact-item">
            <svg class="icon" viewBox="0 0 24 24" fill="currentColor">
              <path d="M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z" />
            </svg>
            <a href={`tel:${phone}`} class="contact-link">
              {phone}
            </a>
          </div>
        )
      }

      {
        location && (
          <div class="contact-item">
            <svg class="icon" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z" />
            </svg>
            <span>
              {location.city}
              {location.region && `, ${location.region}`}
            </span>
          </div>
        )
      }
    </div>

    {
      processedProfiles.length > 0 && (
        <div class="social-links">
          {processedProfiles.map((profile) => (
            <a
              href={profile.url!}
              class="social-link"
              target="_blank"
              rel="noopener noreferrer"
              title={`${profile.network}${profile.username ? ` (${profile.username})` : ''}`}
            >
              <span class={`social-icon ${profile.icon}`} />
              <span class="social-text">{profile.network}</span>
            </a>
          ))}
        </div>
      )
    }

    {
      actions && actions.length > 0 && (
        <div class="header-actions">
          {actions.map((action) => (
            <a
              href={action.url}
              class={`action-button action-${action.type}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              {action.icon && <span class="action-icon">{action.icon}</span>}
              <span>{action.label}</span>
            </a>
          ))}
        </div>
      )
    }
  </div>
</header>

<style>
  .resume-header {
    position: relative;
    background: linear-gradient(
      135deg,
      var(--color-primary) 0%,
      var(--color-accent) 100%
    );
    color: white;
    overflow: hidden;
    margin: -2rem -2rem 0 -2rem;
    border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
  }

  .header-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.1);
  }

  .header-content {
    position: relative;
    z-index: 1;
    padding: 3rem 2rem;
    text-align: center;
  }

  .header-main {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .profile-image-container {
    position: relative;
  }

  .profile-image {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    border: 4px solid rgba(255, 255, 255, 0.2);
    object-fit: cover;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  }

  .header-text {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }

  .name {
    font-size: 3rem;
    font-weight: 700;
    margin: 0;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }

  .title {
    font-size: 1.5rem;
    font-weight: 400;
    margin: 0;
    opacity: 0.9;
  }

  .contact-info {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    justify-content: center;
    margin-bottom: 2rem;
  }

  .contact-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1rem;
  }

  .icon {
    width: 1.25rem;
    height: 1.25rem;
    opacity: 0.8;
  }

  .contact-link {
    color: rgba(255, 255, 255, 0.9);
    text-decoration: none;
    transition: color var(--transition-fast);
  }

  .contact-link:hover {
    color: white;
  }

  .social-links {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
  }

  .social-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 2rem;
    color: white;
    text-decoration: none;
    font-size: 0.875rem;
    font-weight: 500;
    transition: all var(--transition-fast);
    backdrop-filter: blur(10px);
  }

  .social-link:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
  }

  .social-icon {
    width: 1rem;
    height: 1rem;
    background-size: contain;
    background-repeat: no-repeat;
  }

  .social-icon.linkedin {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 24 24' fill='white' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z'/%3E%3C/svg%3E");
  }

  .social-icon.github {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 24 24' fill='white' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z'/%3E%3C/svg%3E");
  }

  .social-icon.website {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 24 24' fill='white' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.94-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z'/%3E%3C/svg%3E");
  }

  @media (max-width: 768px) {
    .resume-header {
      margin: -1rem -1rem 0 -1rem;
    }

    .header-content {
      padding: 2rem 1rem;
    }

    .name {
      font-size: 2.5rem;
    }

    .title {
      font-size: 1.25rem;
    }

    .contact-info {
      flex-direction: column;
      gap: 1rem;
    }

    .social-links {
      flex-direction: column;
      align-items: center;
    }
  }

  @media print {
    .resume-header {
      background: none !important;
      color: var(--color-text) !important;
      border-bottom: 2px solid var(--color-primary);
      margin: 0;
      border-radius: 0;
    }

    .header-overlay {
      display: none;
    }

    .profile-image {
      width: 80px;
      height: 80px;
      border: 2px solid var(--color-border);
    }

    .social-links {
      display: none;
    }
  }
</style>
