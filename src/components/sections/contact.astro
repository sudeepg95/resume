---
interface Props {
  email: string;
  phone?: string;
}

const { email, phone } = Astro.props;
---

<section class="contact-section no-print">
  <h2 class="section-title">
    <svg class="section-icon" viewBox="0 0 24 24" fill="currentColor">
      <path
        d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"
      ></path>
    </svg>
    Get In Touch
  </h2>

  <div class="contact-content">
    <div class="contact-info">
      <p class="contact-description">
        Interested in working together? I'd love to hear about your project and
        discuss how I can help bring your ideas to life.
      </p>
    </div>
    <div class="contact-methods">
      <a href={`mailto:${email}`} class="contact-method">
        <svg class="method-icon" viewBox="0 0 24 24" fill="currentColor">
          <path
            d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"
          ></path>
        </svg>
        <div>
          <span class="method-label">Email</span>
          <span class="method-value">{email}</span>
        </div>
      </a>

      {
        phone && (
          <a href={`tel:${phone}`} class="contact-method">
            <svg class="method-icon" viewBox="0 0 24 24" fill="currentColor">
              <path d="M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z" />
            </svg>
            <div>
              <span class="method-label">Phone</span>
              <span class="method-value">{phone}</span>
            </div>
          </a>
        )
      }
    </div>
  </div>
</section>

<style>
  .contact-section {
    margin: 2rem 0;
  }

  .section-title {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--color-primary);
    margin-bottom: 2rem;
    padding-bottom: 0.75rem;
    border-bottom: 2px solid var(--color-primary);
  }

  :global([data-mode='dark']) .section-title {
    color: var(--color-accent) !important;
    border-bottom-color: var(--color-accent) !important;
  }

  .section-icon {
    width: 1.5rem;
    height: 1.5rem;
    color: inherit;
  }

  .contact-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    align-items: start;
  }

  .contact-description {
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--color-text);
    margin-bottom: 2rem;
  }

  .contact-methods {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .contact-method {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: var(--color-background-secondary);
    border-radius: var(--border-radius);
    text-decoration: none;
    color: var(--color-text);
    transition: all var(--transition-fast);
  }

  .contact-method:hover {
    background: var(--color-primary);
    color: var(--color-white);
    transform: translateX(4px);
  }

  .method-icon {
    width: 1.5rem;
    height: 1.5rem;
    opacity: 0.8;
  }

  .method-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    opacity: 0.8;
  }

  .method-value {
    display: block;
    font-size: 1rem;
    font-weight: 600;
  }

  @media (max-width: 768px) {
    .contact-content {
      grid-template-columns: 1fr;
      gap: 2rem;
    }
  }
</style>
